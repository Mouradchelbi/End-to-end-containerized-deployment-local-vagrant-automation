services:
  vprodb:
    build:
      context: ./Docker-files/db
    image: vprocontainers/vprofiledb
    container_name: vprodb
    ports:
      - "3306:3306"
    volumes:
      - vprodbdata:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=vprodbpass
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "--password=vprodbpass"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vpro-net

  vprocache01:
    image: memcached
    container_name: vprocache01
    ports:
      - "11211:11211"
    healthcheck:
      test: ["CMD-SHELL", "echo 'stats' | timeout 5 telnet localhost 11211 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vpro-net

  vpromq01:
    image: rabbitmq:management
    container_name: vpromq01
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=strongpass123
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vpro-net

  vproapp:
    build:
      context: ./Docker-files/app
    image: vprocontainers/vprofileapp
    container_name: vproapp
    ports:
      - "8080:8080"
    volumes:
      - vproappdata:/usr/local/tomcat/webapps
    depends_on:
      vprodb:
        condition: service_healthy
      # vprocache01:
      #   condition: service_healthy
      vpromq01:
        condition: service_healthy
    networks:
      - vpro-net

  vproweb:
    build:
      context: ./Docker-files/web
    image: vprocontainers/vprofileweb
    container_name: vproweb
    ports:
      - "80:80"
    depends_on:
      vproapp:
        condition: service_started
    networks:
      - vpro-net

volumes:
  vprodbdata:
  vproappdata:

networks:
  vpro-net:
    driver: bridge